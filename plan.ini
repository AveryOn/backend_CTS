
https://github.com/AveryOn/backend_CTS  -  github.com

Backend:

    ---- main.py               # Главный связующий модуль (Обьединяет все маршруты в app)
                               # Он лежит в глобальной области видимости на одном уровне с папками:
                               # requests_module, schemas_module, database_module для того чтобы состоялся относительный импорт

    requests_module     # Основной модуль для работы и связи с клиентом
        ---- __init__.py
        ---- auth.py               # Авторизация, регистрация и пр.
        ---- owner.py              # Операции владельца сервиса
        ---- messanger.py          # Чат, мессенджер
        ---- products.py           # Обработка товаров, добавление, удаление и пр.
        ---- users.py              # Обработка пользователей
        ---- actions:    # Модуль переиспользуемого функционала для взаимодействия путей с БД и Аутентификацией
            ---- auth.py           # Модуль безопасности


    schemas_module:      # Модуль с моделями pydantic
        ---- __init__.py
        ---- comment.py            # Модели pydantic комментариев
        ---- message.py            # Модели pydantic сообщений
        ---- product.py            # Модели pydantic товара
        ---- user_cart.py          # Модели pydantic корзины
        ---- user_chat.py          # Модели pydantic чата
        ---- user.py               # Модели pydantic пользователя

    database_module:    # Модуль СУБД
        ---- __init__.py    
        ---- engine.py              # Основной движок для Баз Данных
        ---- models_products.py     # ORM-модели(таблицы) для PRODUCTS.db
        ---- models_users.py        # ORM-модели(таблицы) для USERS.db
        ---- models_messanger.py    # ORM-модели(таблицы) для MESSANGER.db
        ---- CRUD.py                # Модуль создания, получения, обновления и удаления данных в БД
        ---- DB:            # Пакет с базами данных
            ---- USERS.db           # База Данных с пользователями и их данными
            ---- PRODUCTS.db        # База Данных с товарами и их данными
            ---- MESSANGER.db       # База Данных с чатами и сообщениями




DataBase/USERS:
   ###########################################################################
    ORM-модель User:
    
    название таблицы: users

    1) id - первичный ключ
    2) name - имя пользователя
    3) lastname - фамилия или т.п.
    4) email - эл.почта пользователя
    5) role - роль пользователя в системе
    6) username - уникальное имя пользователя
    7) image - аватарка (картинка пользователя)
    8) hashed_password - хэшированный пароль пользователя
    9) sex - пол пользователя
   10) cart - корзина товара (отношение к таблице UserCart)
   11) chats - чаты пользователя (отношение к таблице UserChat)

   12) color_skin - цвет кожи пользователя  (шутка емае... че совсем чтоли?)


   ###########################################################################
    ORM-модель ServicePerson:
    
    название таблицы: service_person

    1) id - первичный ключ
    2) name - имя пользователя
    3) lastname - фамилия или т.п.
    4) email - эл.почта пользователя
    5) role - роль пользователя в системе
    6) allows - Допустимые права для работы с магазином 
    7) username - уникальное имя пользователя
    8) image - аватарка (картинка пользователя)
    9) hashed_password - хэшированный пароль пользователя
   10) sex - пол пользователя
   12) chats - чаты пользователя (отношение к таблице UserChat)


   ############################################################################
    ORM-модель UserCart:

    название таблицы: carts

    1) id - первичный ключ
    2) owner_id - идентификатор пользователя которому принадлежит эта корзина
    3) data - основные данные которые содержит эта таблица (Массив с товарами корзины)
    4) owner - поле для обеспечения двусторонней связи с User-таблицей

###################################################################################
###################################################################################

DataBase/MESSANGER:
   ############################################################################ 
    ORM-модель UserChat:

    название таблицы: chats

    1) id - первичный ключ
    2) user_id_1 - идентификатор одного пользователя участвующего в чате
    3) user_id_2 - идентификатор другого пользователя участвующего в чате
    4) creation_time - время создания чата
    5) owner - для двусторонней связи с таблицей User
    6) messages - для двусторонней связи с таблицей Message

   ############################################################################ 
    ORM-модель Message:

    название таблицы: messages

    1) id - первичный ключ
    2) user_id_from - идентификатор пользователя который ОТПРАВЛЯЕТ сообщение (отправитель)
    3) user_id_to - идентификатор пользователя который ПОЛУЧАЕТ сообщение (получатель)
    4) creation_time - время создания сообщения
    5) data - тело сообщения
    6) parent_chat_id - идентификатор чата к которому относится это сообщение
    7) parent_chat - для двусторонней связи с таблицей UserChat

###################################################################################
###################################################################################

DataBase/PRODUCTS:
   ###########################################################################
    ORM-модель Product:
    
    название таблицы: products

    1) id - первичный ключ
    2) price - цена товар
    3) discount - значение скидки в процентах
    4) name - наименование товара
    5) specifications - обьект с характеристиками товара (цвет, материал и т.д)
    6) category - категория товаров к которой относится данный товар (пример: категория куртки)
    7) group - группа товаров к которой относится данный товар (пример: зимняя группа товара)
    8) tags - ключевые слова по которым на фронтеде реализуется поиск (теги)
    9) description - полное описание товара
   10) article - артикул товара (число)
   11) images - массив с ссылками на картинки в firebase
   12) promotion - обьект с информацией об акции на данный товар
   13) rating - оценка/рейтинг товара 
   14) remains - отсаток товара в магазине
   15) sold - количество проданного товара

   16) comments - массив с комментариями относящимися к данному товару (двусторонняя связь с Comment)

   ###########################################################################
    ORM-модель Comment:
    
    название таблицы: comments

    1) id - первичный ключ
    2) name - имя пользователя
    3) lastname - фамилия пользователя
    4) data_text - тело комментария. текстовое сообщение
    5) images - массив с фотогрфиями пользователя
    6) rating - оценка пользователя о товаре
    7) owner_id - идентификатор пользователя который написал данный комментарий о товаре
    8) parent_product_id - идентификатор родительского товара к которому относится данный комментарий

    9) parent_product - для двусторонней связи с Product